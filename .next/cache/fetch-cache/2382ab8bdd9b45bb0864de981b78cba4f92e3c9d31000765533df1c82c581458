{"kind":"FETCH","data":{"headers":{"access-control-allow-headers":"Authorization, Content-Type","access-control-allow-origin":"*","access-control-max-age":"600","connection":"Upgrade, Keep-Alive","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Fri, 29 Sep 2023 12:05:47 GMT","keep-alive":"timeout=5","server":"Apache","transfer-encoding":"chunked","upgrade":"h2,h2c","vary":"Accept-Encoding","x-content-type-options":"nosniff, nosniff","x-dns-prefetch-control":"on","x-frame-options":"sameorigin","x-graphql-keys":"a43ffeb5a1e8557da4c7d52eab87ee6f237ea73e13018916074d1918074a0141 graphql:Query operation:getPosts list:post cG9zdDozMjI= cG9zdDozMjA= cG9zdDozMTg= cG9zdDozMTY= cG9zdDozMTQ= cG9zdDozMTI= cG9zdDozMTA= cG9zdDozMDg= cG9zdDo1NDY=","x-graphql-query-id":"a43ffeb5a1e8557da4c7d52eab87ee6f237ea73e13018916074d1918074a0141","x-graphql-url":"bohus.pl/graphql","x-litespeed-cache-control":"no-cache","x-litespeed-tag":"e71_HTTP.200","x-robots-tag":"noindex","x-xss-protection":"1; mode=block"},"body":"","status":200,"url":"https://bohus.pl/graphql"},"revalidate":10,"tags":[]}